{"version":3,"sources":["TaskListItem.js","TaskListContainer.js","Alert.js","DropdownButton.js","TaskItem.js","TaskContainer.js","EmailEntry.js","SignedInApp.js","App.js","reportWebVitals.js","index.js"],"names":["TaskListItem","props","className","TextField","id","variant","placeholder","value","name","onChange","e","handleTaskListNameChange","disabled","checked","InputProps","disableUnderline","style","fontSize","background","width","marginTop","paddingBottom","fontFamily","type","onClick","toggleListModal","updateDeleteListId","updateCurrTaskList","togglePageView","TaskListContainer","taskListData","map","Alert","cancelButton","useRef","okButton","useEffect","current","focus","addEventListener","key","preventDefault","window","onClose","children","ref","onOK","DropdownButton","useState","drop","setDrop","display","toggleModal","updateCurrentDeleteOption","options","option1","currButton","document","getElementById","completeButton","incompleteButton","classList","remove","add","deleteOrView","option2","allButton","option3","onKeyDown","TaskItem","useMediaQuery","minWidth","priority","defaultChecked","toggleCheckbox","handleTaskNameChange","updatePriority","target","selected","TaskContainer","tasksData","EmailEntry","sendButton","re","setShareEmail","listName","htmlFor","tabIndex","test","email","shareTaskList","SignedInApp","db","firebase","firestore","dropdownOptions","sort","setSort","showAlert","setShowAlert","showListAlert","setShowListAlert","currView","setCurrView","currPage","setCurrPage","currentDeleteOption","setCurrentDeleteOption","deleteListId","setDeleteListId","currTaskList","setCurrTaskList","shareEmail","collectionName","query","collection","where","user","uid","taskQuery","shareQuery","doc","useCollection","loading","listData","sharedListData","taskData","sharedValue","docs","data","push","concat","taskValue","currDelete","handleDeleteTasks","taskList","option","ids","i","length","forEach","delete","deleteCurrPageView","filter","task","a","b","toUpperCase","created","newId","generateUniqueID","set","taskCount","createdList","database","ServerValue","TIMESTAMP","owner","sharedWith","update","find","arialabel","arrayUnion","FieldValue","console","log","hidden","oldChecked","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","toggleLogin","toggleSignUp","timeSavingTips","App","useAuthState","userLoading","userError","signOut","displayName","emailVerified","currentUser","sendEmailVerification","message","toggleView","SignIn","SignUp","signInWithPopup","src","Math","floor","random","height","visibility","margin","elementDisplay","useSignInWithEmailAndPassword","signInWithEmailAndPassword","userCredential","error","x","showPassword","pwd","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","password","setPassword","onSubmit","barColors","zoom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","startApp","ReactDOM","render","StrictMode","cordova"],"mappings":"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","file":"static/js/main.d6354192.chunk.js","sourcesContent":["import TextField from '@mui/material/TextField';\n\nfunction TaskListItem(props) {\n        return <div className=\"task-list-item\" aria-label=\"Enter Task List Title\">\n            <TextField\n                id=\"task-list-text-entry\"\n                variant=\"standard\"\n                placeholder=\"Click to Enter List Name\"\n                value={props.name}\n                onChange={e => props.handleTaskListNameChange(e, props.id)}\n                disabled={props.checked}\n                aria-label=\"Enter Task List Title\"\n                InputProps={{ disableUnderline: true,\n                    style: { fontSize: 40,\n                        background: \"transparent\",\n                        width: \"100%\",\n                        marginTop:\"25px\",\n                        paddingBottom:\"10px\",\n                        fontFamily: \"Futura\",} }}\n            />\n            <span id=\"homepage-action-buttons\">\n            <button type=\"button\" aria-label={\"Delete task list \"+ props.name} className=\"task-list-options\" onClick={() => (props.toggleListModal(), props.updateDeleteListId(props.id), props.updateCurrTaskList(\"\"))}>🗑</button>\n            <button type=\"button\" aria-label={\"Enter task list \"+ props.name} className=\"task-list-options\" onClick={() => (props.togglePageView(), props.updateCurrTaskList(props.id))}>⮑</button>\n            </span>\n        </div>;\n}\n\nexport default TaskListItem;\n","import TaskListItem from './TaskListItem';\n\nfunction TaskListContainer(props) {\n    return <div id=\"task-list-container\">\n        {props.taskListData.map(e => {\n            if (e === \"sharedLists\") {\n                return <h2>Shared with Me</h2>\n            } else {\n                return <TaskListItem key={e.id} toggleListModal={props.toggleListModal}\n                                     updateDeleteListId={props.updateDeleteListId}\n                                     handleTaskListNameChange={props.handleTaskListNameChange} {...e}\n                                     togglePageView={props.togglePageView}\n                                     updateCurrTaskList={props.updateCurrTaskList}/>\n            }\n            })\n        }\n    </div>;\n}\n\nexport default TaskListContainer;","import {useEffect, useRef} from \"react\";\n\n\nfunction Alert(props) {\n    const cancelButton = useRef(null);\n    const okButton = useRef(null);\n    useEffect(() => {\n        cancelButton.current.focus();\n        cancelButton.current.addEventListener(\"keydown\", (e) => {\n            //Treat tab & shift+tab the same way bc only two options\n            if(e.key ===  \"Tab\") {\n                e.preventDefault();\n                okButton.current.focus()\n            }\n        });\n        okButton.current.addEventListener(\"keydown\", (e) => {\n            //Treat tab & shift+tab the same way bc only two options\n            if(e.key === \"Tab\") {\n                e.preventDefault();\n                cancelButton.current.focus();\n            }\n        });\n        const close = (e) => {\n            if(e.key === \"Escape\"){\n                props.onClose()\n            }\n        }\n        window.addEventListener('keydown', close)\n    });\n    return (\n    <div className={\"alert-buttons\"}>\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n                <button ref={cancelButton} className={\"alert-button alert-cancel\"} type={\"button\"} aria-label=\"Cancel Delete\"\n                        onClick={props.onClose}>\n                    Cancel\n                </button>\n                <button ref={okButton} className={\"alert-button alert-ok\"} type={\"button\"} aria-label=\"Confirm Delete\"\n                        onClick={() => {\n                            props.onOK();\n                            props.onClose();\n                        }}>\n                    OK\n                </button>\n            </div>\n        </div>\n    </div>);\n}\n\nexport default Alert;","import {useState} from \"react\";\n\nfunction DropdownButton(props) {\n    const [drop, setDrop] = useState(false);\n    let buttonLabel = \"View\";\n    return <div className=\"dropdown\" id={props.id+\"-button\"} aria-label={props.id +\" Selection Dropdown\"}>\n        <button className=\"menu-buttons\" onClick={() => {setDrop(!drop)}}>{props.name}<span className=\"small-triangle\"> ▼ </span></button>\n        <div className=\"dropdown-content\" style={{display: drop ? \"block\" : \"none\"}}>\n            <button className={props.id+\"-dropdown-item selected-dropdown-item\"}  id=\"view-all-dropdown-item\" onClick={() => {\n                if(props.id === \"Delete\") {\n                    props.toggleModal();\n                    props.updateCurrentDeleteOption(props.options.option1);\n                } else {\n                    let currButton = document.getElementById(\"view-all-dropdown-item\");\n                    let completeButton = document.getElementById(\"view-complete-dropdown-item\");                    let compButton = document.getElementById(\"view-all-dropdown-item\");\n                    let incompleteButton = document.getElementById(\"view-incomplete-dropdown-item\");\n                    completeButton.classList.remove(\"selected-dropdown-item\");\n                    incompleteButton.classList.remove(\"selected-dropdown-item\");\n                    currButton.classList.add(\"selected-dropdown-item\");\n                    props.deleteOrView(props.id, props.options.option1);\n                }\n                setDrop(!drop);\n            }} aria-label={props.id +\" \"+ props.options.option1}>{props.options.option1}</button>\n            <button className={props.id+\"-dropdown-item\"} id=\"view-complete-dropdown-item\" onClick={() => {\n                if(props.id === \"Delete\") {\n                    props.toggleModal();\n                    props.updateCurrentDeleteOption(props.options.option2);\n                } else {\n                    let currButton = document.getElementById(\"view-complete-dropdown-item\");\n                    let allButton = document.getElementById(\"view-all-dropdown-item\");\n                    let incompleteButton = document.getElementById(\"view-incomplete-dropdown-item\");\n                    allButton.classList.remove(\"selected-dropdown-item\");\n                    incompleteButton.classList.remove(\"selected-dropdown-item\");\n                    currButton.classList.add(\"selected-dropdown-item\");\n                    props.deleteOrView(props.id, props.options.option2);\n                }\n                setDrop(!drop)\n            }} aria-label={props.id+\" \"+props.options.option2}>{props.options.option2}</button>\n            <button className={props.id+\"-dropdown-item\"} id=\"view-incomplete-dropdown-item\" onClick={() => {\n                if(props.id === \"Delete\") {\n                    props.toggleModal();\n                    props.updateCurrentDeleteOption(props.options.option3);\n                } else {\n                    let currButton = document.getElementById(\"view-incomplete-dropdown-item\");\n                    let completeButton = document.getElementById(\"view-complete-dropdown-item\");\n                    let allButton = document.getElementById(\"view-all-dropdown-item\");\n                    currButton.classList.add(\"selected-dropdown-item\");\n                    allButton.classList.remove(\"selected-dropdown-item\");\n                    completeButton.classList.remove(\"selected-dropdown-item\");\n                    props.deleteOrView(props.id, props.options.option3);\n                }\n                setDrop(!drop)\n            }} onKeyDown={(e) => {\n                if(e.key === \"Tab\"){\n                    if(drop){\n                        setDrop(!drop);\n                    }\n                }\n            }\n            } aria-label={props.id+\" \"+props.options.option3}>{props.options.option3}</button>\n        </div>\n    </div>;\n}\n\nexport default DropdownButton;","import TextField from '@mui/material/TextField';\nimport { useMediaQuery } from 'react-responsive';\n\nfunction TaskItem(props) {\n    const isResized = useMediaQuery({minWidth: 400})\n\n    return <label className=\"task-item\" >\n        <div className={\"task-color\"} id={\"task-color-\" + props.priority + \"-\" + props.checked}>\n            <input type=\"checkbox\" className=\"check\" defaultChecked={props.checked} onClick={() => props.toggleCheckbox(props.id)}/>\n            <span className=\"checkmark\"></span>\n            <TextField\n                id=\"task-text-entry\"\n                variant=\"standard\"\n                placeholder=\"Click to Enter Task\"\n                value={props.name}\n                onChange={e => props.handleTaskNameChange(e, props.id)}\n                disabled={props.checked}\n                InputProps={{ disableUnderline: true,\n                                         style: { background: \"transparent\",\n                                                marginTop:\"2%\",\n                                                paddingBottom:\"10px\",\n                                                fontSize: \"18vw\",\n                                                fontFamily: \"Futura\",\n                                                width: \"80%\"} }}\n            />\n            <select name=\"Priority\" id=\"priority\" onChange={e => props.updatePriority(props.id, e.target.value)}>\n                <option aria-label=\"high priority\" value=\"a\" selected= {\"a\"===props.priority}>High</option>\n                <option aria-label=\"medium priority\" value=\"b\" selected= {\"b\"===props.priority}>Med</option>\n                <option aria-label=\"low priority\" value=\"c\" selected= {\"c\"===props.priority}>Low</option>\n            </select>\n        </div>\n    </label>;\n}\n\nexport default TaskItem;\n","import TaskItem from './TaskItem';\n\nfunction TaskContainer(props) {\n    return <div id=\"task-container\">\n        {props.tasksData.map(e => <TaskItem key={e.id} handleTaskNameChange={props.handleTaskNameChange} {...e} toggleCheckbox={props.toggleCheckbox} updatePriority={props.updatePriority}/>)}\n    </div>;\n}\n\nexport default TaskContainer;","import {useEffect, useRef} from \"react\";\n\n\nfunction EmailEntry(props) {\n    const cancelButton = useRef(null);\n    const sendButton = useRef(null);\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    useEffect(() => {\n        document.getElementById('share-email-entry').focus();\n        document.getElementById('share-email-entry').addEventListener(\"keydown\", (e) => {\n            if(e.key ===  \"Tab\") {\n                e.preventDefault();\n                cancelButton.current.focus()\n            }\n        })\n        sendButton.current.addEventListener(\"keydown\", (e) => {\n            //Treat tab & shift+tab the same way bc only two options\n            if(e.key === \"Tab\") {\n                e.preventDefault();\n                document.getElementById('share-email-entry').focus();\n            }\n        });\n        const close = (e) => {\n            if(e.key === \"Escape\"){\n                props.setShareEmail(false);\n            }\n        }\n        window.addEventListener('keydown', close)\n    });\n    return (\n        <div className={\"alert-buttons\"}>\n            <div className={\"backdrop\"}>\n                <div className=\"modal-share\">\n                    <div id={\"share-area\"}>\n                        <form id={\"share-form\"}>\n                            Sharing the list <span id={\"task-title-in-share\"}> {props.listName} </span>\n                            <div>\n                                <br></br>\n                                <label id={\"share-email\"} htmlFor=\"email\" tabIndex=\"0\"> email: </label>\n                                <input type=\"text\" id=\"share-email-entry\" name=\"email\" tabIndex=\"0\"\n                                       onChange={(e) => {\n                                    document.getElementById(\"share-button\").disabled = !re.test(e.target.value);\n                                }}\n                                /><br></br>\n                            </div>\n                        </form>\n                    </div>\n                    <button ref={cancelButton} className={\"alert-button alert-cancel\"} type={\"button\"} aria-label=\"Cancel Share\"\n                            onClick={() => {props.setShareEmail(false)}}>\n                        Cancel\n                    </button>\n                    <button ref={sendButton} id=\"share-button\" className={\"alert-button alert-ok\"} type={\"button\"} aria-label=\"Confirm Share\"\n                            onClick={() => {\n                                let email = document.getElementById(\"share-email-entry\").value;\n                                props.shareTaskList(email);\n                                props.setShareEmail(false);\n                                }\n                            }>\n                        Share\n                    </button>\n                </div>\n            </div>\n        </div>);\n}\n\nexport default EmailEntry;","import {useCollection} from \"react-firebase-hooks/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport TaskListContainer from \"./TaskListContainer\";\nimport Alert from \"./Alert\";\nimport DropdownButton from \"./DropdownButton\";\nimport TaskContainer from \"./TaskContainer\";\nimport {useState} from \"react\";\nimport EmailEntry from \"./EmailEntry\";\n\nfunction SignedInApp(props) {\n    const db = firebase.firestore();\n\n    const dropdownOptions = {\n        option1: \"All Tasks\",\n        option2: \"Completed Tasks\",\n        option3: \"Uncompleted Tasks\"\n    }\n\n    const menuItems = [\n        {\n            id: \"view\",\n            name: \"View\",\n            arialabel: \"view tasks\"\n        },\n        {\n            id: \"Delete\",\n            name: \"🗑\",\n            arialabel: \"delete tasks\"\n        }\n    ]\n\n    const [sort, setSort] = useState(\"Date Created\");\n    const [showAlert, setShowAlert] = useState(false);\n    const [showListAlert, setShowListAlert] = useState(false);\n    const [currView, setCurrView] = useState(\"All Tasks\");\n    const [currPage, setCurrPage] = useState(\"home\")\n    const [currentDeleteOption, setCurrentDeleteOption] = useState(\"\");\n    const [deleteListId, setDeleteListId] = useState(\"\");\n    const [currTaskList, setCurrTaskList] = useState(\"\");\n    const [shareEmail, setShareEmail] = useState(false);\n\n        const collectionName = \"hilnels-hmc-taskListsAuth\";\n\n        let query = db.collection(collectionName).where('owner', \"==\", props.user.uid);\n        const collection = db.collection(collectionName).where('owner', \"==\", props.user.uid);\n        let taskQuery = db.collection(collectionName).where('owner', \"==\", props.user.uid);\n\n        let shareQuery = db.collection(collectionName).where('sharedWith', \"array-contains\", props.user.email);\n        const shareCollection = db.collection(collectionName).where('sharedWith', \"array-contains\", props.user.email);\n\n        if (currTaskList !== \"\") {\n            taskQuery = db.collection(collectionName).doc(currTaskList).collection(\"Tasks\");\n        }\n\n        const [value, loading, error] = useCollection(query);\n        let listData = []\n        let sharedListData = []\n        let taskData = []\n\n        const [sharedValue, sharedLoading, sharedError] = useCollection(shareQuery)\n\n        if (value) {\n            listData = value.docs.map(e => {\n                return {...e.data(), id: e.id}\n            });\n            if (sharedValue) {\n                sharedListData = sharedValue.docs.map(e => {\n                    return {...e.data(), id: e.id}\n                })\n            }\n            listData.push(\"sharedLists\")\n            listData = listData.concat(sharedListData)\n        }\n\n        const [taskValue, taskLoading, taskError] = useCollection(taskQuery)\n\n        if (taskValue) {\n            taskData = taskValue.docs.map(e => {\n                return {...e.data(), id: e.id}\n            })\n        }\n\n        if (currView === \"Completed Tasks\") {\n            taskData = taskData.filter(task => task.checked)\n        } else if (currView === \"Uncompleted Tasks\") {\n            taskData = taskData.filter(task => !task.checked)\n        }\n\n        if (sort === \"Name: A to Z\") {\n            taskData = taskData.sort((a, b) => (a.name.toUpperCase() > b.name.toUpperCase()) ? 1 : -1)\n        } else if (sort === \"Name: Z to A\") {\n            taskData = taskData.sort((a, b) => (a.name.toUpperCase() < b.name.toUpperCase()) ? 1 : -1)\n        } else if (sort === \"Date Created\") {\n            taskData = taskData.sort((a, b) => (a.created > b.created) ? 1 : -1)\n        } else if (sort === \"Priority: High to Low\") {\n            taskData = taskData.sort((a, b) => (a.priority > b.priority) ? 1 : -1)\n        } else if (sort === \"Priority: Low to High\") {\n            taskData = taskData.sort((a, b) => (a.priority < b.priority) ? 1 : -1)\n        }\n\n        function toggleModal() {\n            setShowAlert(!showAlert);\n        }\n\n        function toggleListModal() {\n            setShowListAlert(!showListAlert);\n        }\n\n        function togglePageView() {\n            if (currPage === \"home\") {\n                setCurrPage(\"list\");\n            } else {\n                setCurrPage(\"home\")\n            }\n        }\n\n        function updateCurrTaskList(id) {\n            setCurrTaskList(id);\n        }\n\n        function updateCurrentDeleteOption(currDelete) {\n            setCurrentDeleteOption(currDelete);\n        }\n\n        function updateDeleteListId(currDelete) {\n            setDeleteListId(currDelete);\n        }\n\n        function handleTaskNameChange(e, id) {\n            taskData.find(task => task.id === id).name = e.target.value\n            db.collection(collectionName).doc(currTaskList).collection(\"Tasks\").doc(id).update({name: e.target.value})\n        }\n\n        function handleTaskListNameChange(e, id) {\n            db.collection(collectionName).doc(id).update({name: e.target.value});\n        }\n\n        function toggleCheckbox(id) {\n            const oldChecked = taskData.find(e => e.id === id).checked;\n            db.collection(collectionName).doc(currTaskList).collection(\"Tasks\").doc(id).update({checked: !oldChecked})\n        }\n\n        function handleDeleteTasks(taskList, option) {\n            let ids = [];\n            for (let i = 0; i < taskList.length; i++) {\n                if (option === \"All Tasks\") {\n                    ids.push(taskList[i]);\n                } else {\n                    ids.push(taskList[i].id);\n                }\n                ids.forEach(id => db.collection(collectionName).doc(currTaskList).collection(\"Tasks\").doc(id).delete());\n            }\n        }\n\n        function deleteCurrPageView(id) {\n            db.collection(collectionName).doc(id).delete();\n        }\n\n        function deleteOrView(id, option) {\n            if (id === \"Delete\") {\n                if (option === \"All Tasks\") {\n                    let ids = taskData.map(e => e.id);\n                    handleDeleteTasks(ids, option);\n                } else if (option === \"Completed Tasks\") {\n                    let ids = taskData.filter(e => {\n                        if (e.checked) return e.id\n                    });\n                    handleDeleteTasks(ids, option);\n                } else if (option === \"Uncompleted Tasks\") {\n                    let ids = taskData.filter(e => {\n                        if (!e.checked) return e.id\n                    });\n                    handleDeleteTasks(ids, option);\n                }\n            }\n            if (id === \"view\") {\n                if (option === \"All Tasks\") {\n                    setCurrView(\"All Tasks\")\n                } else if (option === \"Completed Tasks\") {\n                    setCurrView(\"Completed Tasks\")\n                } else if (option === \"Uncompleted Tasks\") {\n                    setCurrView(\"Uncompleted Tasks\")\n                }\n            }\n        }\n\n        function updatePriority(id, priority) {\n            db.collection(collectionName).doc(currTaskList).collection(\"Tasks\").doc(id).update({priority: priority})\n        }\n\n        function shareTaskList(email) {\n            const arrayUnion = firebase.firestore.FieldValue.arrayUnion;\n            db.collection(collectionName).doc(currTaskList).update({sharedWith: arrayUnion(email)})\n            console.log(listData.find(e => e.id === currTaskList))\n        }\n\n\n        function makeNewItem() {\n            const newId = generateUniqueID()\n            db.collection(collectionName).doc(currTaskList).collection(\"Tasks\").doc(newId).set({\n                id: newId,\n                name: \"\",\n                checked: false,\n                priority: \"c\",\n                created: firebase.database.ServerValue.TIMESTAMP,\n                owner: props.user.uid,\n                sharedWith: []\n            });\n        }\n\n        function makeNewTaskList() {\n            const newId = generateUniqueID();\n            db.collection(collectionName).doc(newId).set({\n                id: newId,\n                name: \"\",\n                taskCount: 0,\n                createdList: firebase.database.ServerValue.TIMESTAMP,\n                owner: props.user.uid,\n                sharedWith: []\n            })\n        }\n\n    function toggleView(id) {\n        document.getElementById('share-area').style.display = 'none';\n\n        let elementDisplay = document.getElementById(id).style.display;\n        if (!elementDisplay || elementDisplay === 'none') {\n            document.getElementById(id).style.display = \"grid\";\n        } else {\n            document.getElementById(id).style.display = \"none\";\n        }\n    }\n\n        return <div>\n            {\n                loading ? <div>Loading ... </div> :\n                    (currPage === \"home\") ?\n                        <div className=\"homepage\">\n                            <h2 className=\"start\" tabIndex=\"0\" aria-label=\"My Task Lists\">My Task Lists</h2>\n                            <div>\n                                <button type=\"button\" className=\"new-list-button\" onClick={makeNewTaskList}\n                                        aria-label=\"Create a new task list\">New Task List\n                                </button>\n                            </div>\n                            <TaskListContainer toggleListModal={toggleListModal} updateDeleteListId={updateDeleteListId}\n                                               deleteCurrPageView={deleteCurrPageView}\n                                               handleTaskListNameChange={handleTaskListNameChange}\n                                               taskListData={listData} togglePageView={togglePageView}\n                                               updateCurrTaskList={updateCurrTaskList}/>\n                            {showListAlert &&\n                            <Alert onClose={toggleListModal} onOK={() => deleteCurrPageView(deleteListId)}>\n                                <div tabIndex=\"1\"> Are you sure you want to delete the task list:\n                                    <div tabIndex=\"1\">\n                                        {(listData.find(e => e.id === deleteListId).name) === \"\" ? \" New Task List\" : (listData.find(e => e.id === deleteListId).name)}\n                                    </div>\n                                </div>\n                            </Alert>}\n                        </div> :\n                        <div className=\"App\">\n                            <div className=\"buttons-and-tasks\">\n                                <div id=\"fixed-buttons\" className={\"sticky\"}>\n                                    <h2 className=\"start\" tabIndex=\"0\"\n                                        aria-label={(listData.find(e => e.id === currTaskList).name) === \"\" ? \" New Task List\" : (listData.find(e => e.id === currTaskList).name)}>\n                                        {(listData.find(e => e.id === currTaskList).name) === \"\" ? \" New Task List\" : (listData.find(e => e.id === currTaskList).name)}\n                                    </h2>\n                                    <div className=\"menu-buttons-container\">\n                                        <button type=\"button\" id=\"back-button\" className=\"menu-buttons\"\n                                                onClick={() => {\n                                                    togglePageView();\n                                                    setShareEmail(false)\n                                                }} aria-label=\"Return to Task Lists Homepage\">⮐\n                                        </button>\n                                        <div className=\"dropdown\" id=\"new-item-button\" aria-label=\"create a new task\">\n                                            <button type=\"button\" className=\"menu-buttons\" onClick={makeNewItem}>New\n                                                Item\n                                            </button>\n                                        </div>\n                                        {menuItems.map(e => <DropdownButton key={e.id}\n                                                                            updateCurrentDeleteOption={updateCurrentDeleteOption}\n                                                                            toggleModal={toggleModal}\n                                                                            tasksData={taskData} {...e}\n                                                                            options={dropdownOptions}\n                                                                            deleteOrView={deleteOrView}/>)}\n                                        <button id=\"share-menu-button\" type=\"button\" className=\"menu-buttons\"\n                                                onClick={() => setShareEmail(true)}>Share\n                                        </button>\n                                        {shareEmail &&\n                                        <EmailEntry shareTaskList={shareTaskList} setShareEmail={setShareEmail}\n                                                    listName={(listData.find(e => e.id === currTaskList).name)}/>\n                                        }\n                                        <div id=\"sorting-area\">\n                                    <span>\n                                        <div id=\"sort\">\n                                            <div id=\"sort-label\">Sort By:</div>\n                                            <select name=\"sorting\" id=\"task-sorting\" aria-label=\"Sort tasks by\"\n                                                    onChange={e => setSort(e.target.value)}>\n                                                <option selected hidden>Sort By:</option>\n                                                <option value=\"Date Created\"\n                                                        selected={\"Date Created\" === sort}>Date Created</option>\n                                                <option value=\"Name: A to Z\"\n                                                        selected={\"Name: A to Z\" === sort}>Name: A to Z</option>\n                                                <option value=\"Name: Z to A\"\n                                                        selected={\"Name: Z to A\" === sort}>Name: Z to A</option>\n                                                <option value=\"Priority: High to Low\"\n                                                        selected={\"Priority: High to Low\" === sort}>Priority: High to Low</option>\n                                                <option value=\"Priority: Low to High\"\n                                                        selected={\"Priority: Low to High\" === sort}>Priority: Low to High</option>\n                                            </select>\n                                        </div>\n                                    </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <TaskContainer handleTaskNameChange={handleTaskNameChange} tasksData={taskData}\n                                               toggleCheckbox={toggleCheckbox} updatePriority={updatePriority}/>\n                                {showAlert &&\n                                <Alert onClose={toggleModal} onOK={() => deleteOrView(\"Delete\", currentDeleteOption)}\n                                       dropdownOptions={dropdownOptions}>\n                                    {(currentDeleteOption === \"All Tasks\") ? <div tabIndex=\"1\">\n                                            Are you sure you want to delete all {taskData.length} task(s)?\n                                        </div> :\n                                        (currentDeleteOption === \"Uncompleted Tasks\") ?\n                                            <div tabIndex=\"1\">\n                                                Are you sure you want to\n                                                delete {taskData.filter(e => !e.checked).length} uncompleted task(s)?\n                                            </div> :\n                                            <div tabIndex=\"1\">\n                                                Are you sure you want to\n                                                delete {taskData.filter(e => e.checked).length} completed task(s)?\n                                            </div>}\n                                </Alert>}\n                            </div>\n                        </div>\n            }\n        </div>;\n    }\n\nexport default SignedInApp;","import './App.css';\nimport firebase from \"firebase/compat\";\nimport SignedInApp from \"./SignedInApp\";\nimport PasswordStrengthBar from 'react-password-strength-bar';\n\nimport {\n    useAuthState,\n    useCreateUserWithEmailAndPassword,\n    useSignInWithEmailAndPassword\n} from \"react-firebase-hooks/auth\";\nimport {useState} from \"react\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDoJ20jLJgywuuBGKRGlcUQNH0abdUQ_Pw\",\n    authDomain: \"task-list-91e71.firebaseapp.com\",\n    projectId: \"task-list-91e71\",\n    storageBucket: \"task-list-91e71.appspot.com\",\n    messagingSenderId: \"786170287003\",\n    appId: \"1:786170287003:web:00ac302dcd21562873073e\",\n    measurementId: \"G-SS8R968F1Z\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\n\nlet toggleLogin = false;\nlet toggleSignUp = false;\nconst timeSavingTips = [\"When selecting with the mouse, double-click to select a word!\",\n    \"When selecting with the mouse, triple-click to select a line!\",\n    \"Learn to touch type by mounting a touch typing chart near your computer!\",\n    \"\\\"Learning is an investment: pay some immediate productivity for increased future productivity\\\" -Neil Rhodes\"]\n\nfunction App(props) {\n    const [user, userLoading, userError] = useAuthState(auth);\n\n    function verifyEmail() {\n        auth.currentUser.sendEmailVerification();\n    }\n\n    if (userLoading) {\n        return <p>Checking...</p>;\n    } else if (user) {\n        return <div>\n            <button tabIndex=\"1\" type=\"button\" onClick={() => auth.signOut()}>Logout: {user.displayName || user.email}</button>\n            {!user.emailVerified && <button type=\"button\" onClick={verifyEmail}>Verify email</button>}\n            <SignedInApp {...props} user={user}/>\n\n        </div>\n    } else {\n        return <div>\n            {userError && <p>Error App: {userError.message}</p>}\n            <div id={'header-wrapper'}>\n            <button id={'header-login-button'} onClick={() => toggleView('login-area')}>Log In</button>\n            <button id={'header-signup-button'} onClick={() => toggleView('signup-area')}>Sign Up</button>\n            </div>\n            <h2>Task List</h2>\n            <div id=\"welcome-text\">Welcome to Task List!<br/>Login or sign up to began making task lists .</div>\n            <br/>\n            <div id=\"sign-in-buttons\">\n                <SignIn key=\"Sign In\"/>\n                <SignUp key=\"Sign Up\"/>\n                <div id=\"or-text\">——————————— or ———————————</div>\n            </div>\n            <div>\n                <div id='social-media-signin'>\n                    <div tabIndex={'1'} className=\"google-button\" onKeyDown={(e) => {\n                        if(e.key === 'Enter'){\n                            auth.signInWithPopup(googleProvider);\n                        }\n                    }} onClick={() => {\n                        auth.signInWithPopup(googleProvider)}}>\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\"\n                                 src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\n                        </div>\n                        <div className=\"btn-text\">Continue with Google</div>\n                    </div>\n\n                    <div tabIndex={'1'} className=\"facebook-button\" onKeyDown={(e) => {\n                        if(e.key === 'Enter'){\n                            auth.signInWithPopup(facebookProvider);\n                        }\n                    }} onClick={() => {\n                        auth.signInWithPopup(facebookProvider)}}>\n                        <div className=\"facebook-icon-wrapper\">\n                            <img className=\"facebook-icon\"\n                                 src=\"https://upload.wikimedia.org/wikipedia/commons/9/91/036-facebook.png\"/>\n                        </div>\n                        <div className=\"btn-text\">Continue with Facebook</div>\n                    </div>\n                </div>\n                <div id=\"tips-wrapper\">\n                    <div id=\"time-saving-tips-title\">Time Saving Tip!</div>\n                    <div id=\"time-saving-tips-body\">\n                        {timeSavingTips[Math.floor(Math.random()*timeSavingTips.length)]}\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n\n    function showPassword() {\n        let x = document.getElementById(\"login-password\");\n        if (x.type === \"password\") {\n            x.type = \"text\";\n        } else {\n            x.type = \"password\";\n        }\n    }\n\n    function toggleView(id) {\n        document.getElementById('signup-area').style.display = 'none';\n        document.getElementById('login-area').style.display = 'none';\n        if(id === 'signup-area') {\n            document.getElementById('sign-in-buttons').style.height = '850px';\n            document.getElementById('login-button').style.display = 'none';\n            document.getElementById('signup-button').style.display = 'none';\n            document.getElementById('header-login-button').style.visibility = 'visible';\n            document.getElementById('header-signup-button').style.visibility = 'hidden';\n        } else if(id === 'login-area') {\n            document.getElementById('login-button').style.display = 'grid';\n            document.getElementById('login-button').style.margin = 'auto';\n            document.getElementById('sign-in-buttons').style.height = '600px';\n            document.getElementById('signup-button').style.display = 'none';\n            document.getElementById('header-login-button').style.visibility = 'hidden';\n            document.getElementById('header-signup-button').style.visibility = 'visible';\n        }\n\n        let elementDisplay = document.getElementById(id).style.display;\n        if (!elementDisplay || elementDisplay === 'none') {\n            document.getElementById(id).style.display = \"grid\";\n        } else {\n            document.getElementById(id).style.display = \"none\";\n        }\n    }\n\n    function SignIn() {\n        const [\n            signInWithEmailAndPassword,\n            userCredential, loading, error\n        ] = useSignInWithEmailAndPassword(auth);\n\n        if (userCredential) {\n            // Shouldn't happen because App should see that\n            // we are signed in.\n            return <div>Unexpectedly signed in already</div>\n        } else if (loading) {\n            return <p>Logging in…</p>\n        }\n        return <div>\n            {error && <p>\"Error logging in: \" {error.message}</p>}\n            <div id={\"login-area\"}>\n                <form id={\"login-form\"}>\n                    <label htmlFor=\"email\">email:</label><br></br>\n                    <input type=\"text\" id=\"login-email\" name=\"email\"></input><br></br>\n                    <label htmlFor=\"password\">password:</label><br></br>\n                    <input type=\"password\" id=\"login-password\" name=\"password\"></input><br></br>\n                </form>\n                <label id={\"toggle-password-vis\"}>\n                    <input type=\"checkbox\" onClick={() => showPassword()}/> Show Password\n                </label>\n            </div>\n            <button id={\"login-button\"} onClick={() => {\n                    if(!toggleLogin) {\n                        toggleView('login-area');\n                        toggleLogin = true;\n                    } else {\n                        let email = document.getElementById(\"login-email\").value;\n                        let pwd = document.getElementById(\"login-password\").value;\n                        signInWithEmailAndPassword(email, pwd);\n                        toggleLogin = false;\n                    }\n            }}>Log In\n            </button>\n        </div>\n    }\n\n    function SignUp() {\n        const [\n            createUserWithEmailAndPassword,\n            userCredential, loading, error\n        ] = useCreateUserWithEmailAndPassword(auth);\n        const [password, setPassword] = useState(\"\");\n\n        if (userCredential) {\n            // Shouldn't happen because App should see that\n            // we are signed in.\n            return <div>Unexpectedly signed in already</div>\n        } else if (loading) {\n            return <p>Signing up…</p>\n        }\n        return <div>\n            {error && <p>\"Error signing up: \" {error.message}</p>}\n            <div id={\"signup-area\"}>\n                <form id={\"signup-form\"} onSubmit={() => {\n                    let email = document.getElementById(\"email\").value;\n                    createUserWithEmailAndPassword(email, password);\n                }}>\n                    <label htmlFor=\"email\">email:</label><br></br>\n                    <input type=\"text\" id=\"email\" name=\"email\"></input><br></br>\n                    <label htmlFor=\"password\">password:</label><br></br>\n                    <div id={'password-area'}>\n                        <input type=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} />\n                        <PasswordStrengthBar\n                            password={password}\n                            barColors={[\n                                \"#B83E26\",\n                                \"#FFB829\",\n                                \"#009200\",\n                                \"#009200\",\n                                \"#009200\",\n                                \"#009200\"\n                            ]}\n                            style={{ width: '100%',\n                                zoom: '400%'}}\n                        />\n                    </div>\n                    <label htmlFor=\"password\">confirm password:</label><br></br>\n                    <input type=\"password\" id=\"confirm-password\" name=\"password\" onChange={(e) => {\n                        if(e.target.value === password) {\n                            document.getElementById('signup-submit').disabled = false;\n                        } else {\n                            document.getElementById('signup-submit').disabled = true;\n                        }\n                    }\n                    }>\n                    </input><br></br>\n                    <button id={\"signup-submit\"} disabled>Sign Up</button>\n                </form>\n            </div>\n            <button id={\"signup-button\"} onClick={() => {\n                if(!toggleSignUp) {\n                    toggleView('signup-area');\n                    toggleSignUp = true;\n                } else {\n                    toggleSignUp = false;\n                }\n            }}>Sign Up\n            </button>\n            {/*<div id={\"signup-area\"}>*/}\n            {/*    <form id={\"signup-form\"} onSubmit={() => {*/}\n            {/*            let email = document.getElementById(\"email\").value;*/}\n            {/*            createUserWithEmailAndPassword(email, password);*/}\n            {/*    }}>*/}\n            {/*        <label htmlFor=\"email\">email:</label><br></br>*/}\n            {/*        <input type=\"text\" id=\"email\" name=\"email\"></input><br></br>*/}\n            {/*        <label htmlFor=\"password\">password:</label><br></br>*/}\n            {/*        <div id={'password-area'}>*/}\n            {/*        <input type=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} />*/}\n            {/*        <PasswordStrengthBar*/}\n            {/*            password={password}*/}\n            {/*            barColors={[*/}\n            {/*                \"#B83E26\",*/}\n            {/*                \"#FFB829\",*/}\n            {/*                \"#009200\",*/}\n            {/*                \"#009200\",*/}\n            {/*                \"#009200\",*/}\n            {/*                \"#009200\"*/}\n            {/*            ]}*/}\n            {/*            style={{ width: '100%',*/}\n            {/*                      zoom: '400%'}}*/}\n            {/*        />*/}\n            {/*        </div>*/}\n            {/*        <label htmlFor=\"password\">confirm password:</label><br></br>*/}\n            {/*        <input type=\"password\" id=\"confirm-password\" name=\"password\" onChange={(e) => {*/}\n            {/*            if(e.target.value === password) {*/}\n            {/*                document.getElementById('signup-submit').disabled = false;*/}\n            {/*            } else {*/}\n            {/*                document.getElementById('signup-submit').disabled = true;*/}\n            {/*            }*/}\n            {/*        }*/}\n            {/*        }>*/}\n            {/*        </input><br></br>*/}\n            {/*        <button id={\"signup-submit\"} disabled>Sign Up</button>*/}\n            {/*    </form>*/}\n            {/*</div>*/}\n        </div>\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet startApp = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App/></React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nif(!window.cordova) {\n    startApp()\n} else {\n    document.addEventListener('deviceready', startApp, false)\n}\n\nreportWebVitals();\n"],"sourceRoot":""}
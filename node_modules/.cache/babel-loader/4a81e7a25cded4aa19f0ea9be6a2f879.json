{"ast":null,"code":"var _jsxFileName = \"/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from \"react\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport ButtonsAndTasks from './ButtonsAndTasks';\nimport TaskItem from \"./TaskItem\";\nimport Alert from \"./Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet currentDeleteOption = \"\";\nlet data = [{\n  id: 1,\n  name: \"test\",\n  checked: false,\n  hidden: false\n}, {\n  id: 2,\n  name: \"test2\",\n  checked: false,\n  hidden: false\n}];\nconst dropdownOptions = {\n  option1: \"All Tasks\",\n  option2: \"Completed Tasks\",\n  option3: \"Uncompleted Tasks\"\n};\nconst menuItems = [{\n  id: \"view\",\n  name: \"View\"\n}, {\n  id: \"trash\",\n  name: \"ðŸ—‘\"\n}];\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState(data);\n  const [showAlert, setShowAlert] = useState(false);\n\n  function toggleModal() {\n    setShowAlert(!showAlert);\n  }\n\n  function setCurrentDeleteOption(currDelete) {\n    currentDeleteOption = currDelete;\n  }\n\n  function handleAlertOK() {\n    console.log('ok');\n  }\n\n  function handleTaskNameChange(e, id) {\n    console.log(\"handling task name change!\");\n    let taskIndex = tasks.findIndex(e => e.id === id);\n    tasks[taskIndex].name = e.target.value;\n    console.log(tasks);\n    setTasks(tasks);\n  }\n\n  function hideTask(task, checkMatch) {\n    if (task.checked === checkMatch) {\n      task.hidden = true;\n    } else {\n      task.hidden = false;\n    }\n  }\n\n  function toggleCheckbox(id) {\n    tasks.find(e => e.id === id).checked = !tasks.find(e => e.id === id).checked;\n  }\n\n  function deleteOrView(id, option) {\n    if (id === \"trash\") {\n      if (option === \"All Tasks\") {\n        setTasks([]);\n      } else if (option === \"Completed Tasks\") {\n        let newTasks = tasks.filter(element => element.checked === false);\n        setTasks(newTasks);\n      } else if (option === \"Uncompleted Tasks\") {\n        let newTasks = tasks.filter(element => element.checked === true);\n        setTasks(newTasks);\n      }\n    }\n\n    if (id === \"view\") {\n      console.log(\"tasks: \", tasks);\n\n      if (option === \"All Tasks\") {\n        tasks.forEach(e => e.hidden = false);\n        setTasks(tasks);\n      } else if (option === \"Completed Tasks\") {\n        tasks.forEach(e => hideTask(e, false));\n        console.log(\"tasks after completed\", tasks);\n        setTasks(tasks);\n      } else if (option === \"Uncompleted Tasks\") {\n        console.log(\"tasks after uncompleted \", tasks);\n        tasks.forEach(e => hideTask(e, true));\n        setTasks(tasks);\n      }\n    }\n  }\n\n  function MakeNewItem() {\n    setTasks([{\n      id: generateUniqueID(),\n      name: \"Enter Task\",\n      checked: false,\n      hidden: false\n    }, ...tasks]);\n    console.log(tasks);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: toggleModal,\n      onOK: deleteOrView(\"trash\", currentDeleteOption),\n      dropdownOptions: dropdownOptions,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Are you sure you want to delete these tasks?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(ButtonsAndTasks, {\n      setCurrentDeleteOption: setCurrentDeleteOption,\n      toggleModal: toggleModal,\n      handleAlertOK: handleAlertOK,\n      handleTaskNameChange: handleTaskNameChange,\n      toggleCheckbox: toggleCheckbox,\n      deleteOrView: deleteOrView,\n      tasksData: tasks,\n      buttonData: menuItems,\n      dropdownOptions: dropdownOptions,\n      makeNewItem: MakeNewItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"Ug7AM7FARTCIjzJGniZDUyLqCWE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/App.js"],"names":["useState","generateUniqueID","ButtonsAndTasks","TaskItem","Alert","currentDeleteOption","data","id","name","checked","hidden","dropdownOptions","option1","option2","option3","menuItems","App","tasks","setTasks","showAlert","setShowAlert","toggleModal","setCurrentDeleteOption","currDelete","handleAlertOK","console","log","handleTaskNameChange","e","taskIndex","findIndex","target","value","hideTask","task","checkMatch","toggleCheckbox","find","deleteOrView","option","newTasks","filter","element","forEach","MakeNewItem"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport ButtonsAndTasks from './ButtonsAndTasks';\nimport TaskItem from \"./TaskItem\";\nimport Alert from \"./Alert\";\n\nlet currentDeleteOption = \"\";\n\nlet data = [\n  {\n    id: 1,\n    name: \"test\",\n    checked: false,\n    hidden: false\n  },\n  {\n    id: 2,\n    name: \"test2\",\n    checked: false,\n    hidden: false\n  }\n]\n\nconst dropdownOptions = {\n  option1: \"All Tasks\",\n  option2: \"Completed Tasks\",\n  option3: \"Uncompleted Tasks\"\n}\n\nconst menuItems = [\n  {\n    id: \"view\",\n    name: \"View\"\n  },\n  {\n    id: \"trash\",\n    name: \"ðŸ—‘\",\n  }\n]\n\nfunction App() {\n  const [tasks, setTasks] = useState(data);\n  const [showAlert, setShowAlert] = useState(false);\n\n  function toggleModal() {\n    setShowAlert(!showAlert);\n  }\n\n  function setCurrentDeleteOption(currDelete) {\n    currentDeleteOption = currDelete;\n  }\n\n  function handleAlertOK() {\n    console.log('ok');\n  }\n\n  function handleTaskNameChange(e, id) {\n    console.log(\"handling task name change!\")\n    let taskIndex = tasks.findIndex(e => e.id === id);\n    tasks[taskIndex].name = e.target.value\n    console.log(tasks)\n    setTasks(tasks);\n  }\n\n  function hideTask(task, checkMatch) {\n    if (task.checked === checkMatch) {\n      task.hidden = true;\n    } else {\n      task.hidden = false;\n    }\n  }\n\n  function toggleCheckbox(id) {\n    tasks.find(e => e.id === id).checked = !tasks.find(e => e.id === id).checked\n  }\n\n  function deleteOrView(id, option) {\n    if (id === \"trash\") {\n      if (option === \"All Tasks\") {\n          setTasks([])\n      } else if (option === \"Completed Tasks\") {\n          let newTasks = tasks.filter(element => element.checked === false)\n          setTasks(newTasks)\n      } else if (option === \"Uncompleted Tasks\") {\n          let newTasks = tasks.filter(element => element.checked === true)\n          setTasks(newTasks)\n      }\n    }\n    if (id === \"view\") {\n      console.log(\"tasks: \", tasks)\n      if (option === \"All Tasks\") {\n        tasks.forEach(e => e.hidden = false)\n        setTasks(tasks);\n      } else if (option === \"Completed Tasks\") {\n          tasks.forEach(e => hideTask(e, false))\n          console.log(\"tasks after completed\", tasks)\n          setTasks(tasks);\n       } else if (option === \"Uncompleted Tasks\") {\n          console.log(\"tasks after uncompleted \", tasks)\n          tasks.forEach(e => hideTask(e, true))\n          setTasks(tasks);\n      }\n    }\n  }\n\n  function MakeNewItem() {\n    setTasks([      {\n      id: generateUniqueID(),\n      name: \"Enter Task\",\n      checked: false,\n      hidden: false\n    },\n      ...tasks])\n    console.log(tasks);\n  }\n\n  return (\n      <div className=\"App\">\n        <div id=\"app-title\"><h2>Tasks</h2>\n        </div>\n        {showAlert && <Alert onClose={toggleModal} onOK={deleteOrView(\"trash\", currentDeleteOption)} dropdownOptions={dropdownOptions}>\n          <div>\n            Are you sure you want to delete these tasks?\n          </div>\n        </Alert>}\n        <ButtonsAndTasks setCurrentDeleteOption={setCurrentDeleteOption} toggleModal={toggleModal} handleAlertOK={handleAlertOK} handleTaskNameChange={handleTaskNameChange} toggleCheckbox={toggleCheckbox} deleteOrView={deleteOrView} tasksData={tasks} buttonData={menuItems} dropdownOptions={dropdownOptions} makeNewItem={MakeNewItem}/>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
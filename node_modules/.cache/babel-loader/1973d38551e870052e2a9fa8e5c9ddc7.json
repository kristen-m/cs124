{"ast":null,"code":"var _jsxFileName = \"/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/TaskItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskItem(props) {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"task-item\",\n    hidden: props.taskData.hidden,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: \"check\",\n      checked: props.taskData.check,\n      onClick: () => props.toggleCheckbox(props.taskData.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.taskData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit\",\n      type: \"button\",\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 12\n  }, this);\n}\n\n_c = TaskItem;\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/TaskItem.js"],"names":["TaskItem","props","taskData","hidden","check","toggleCheckbox","id","name"],"mappings":";;;AAAA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBAAO;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,MAAM,EAAIA,KAAK,CAACC,QAAN,CAAeC,MAAtD;AAAA,4BACH;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,OAAjC;AAAyC,MAAA,OAAO,EAAIF,KAAK,CAACC,QAAN,CAAeE,KAAnE;AAA0E,MAAA,OAAO,EAAE,MAAMH,KAAK,CAACI,cAAN,CAAqBJ,KAAK,CAACC,QAAN,CAAeI,EAApC;AAAzF;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAA,gBAAOL,KAAK,CAACC,QAAN,CAAeK;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHG,eAIH;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH;;KAPQP,Q;AAST,eAAeA,QAAf","sourcesContent":["function TaskItem(props) {\n    return <label className=\"task-item\" hidden = {props.taskData.hidden} >\n        <input type=\"checkbox\" className=\"check\" checked = {props.taskData.check} onClick={() => props.toggleCheckbox(props.taskData.id)}/>\n        <span className=\"checkmark\"></span>\n        <span>{props.taskData.name}</span>\n        <button className=\"edit\" type=\"button\">edit</button>\n    </label>;\n}\n\nexport default TaskItem;"]},"metadata":{},"sourceType":"module"}
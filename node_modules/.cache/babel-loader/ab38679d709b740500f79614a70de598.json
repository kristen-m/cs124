{"ast":null,"code":"var _jsxFileName = \"/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from \"react\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data = [{\n  id: 1,\n  name: \"test\",\n  check: false\n}, {\n  id: 2,\n  name: \"test2\",\n  check: true\n}];\nconst dropdownOptions = {\n  option1: \"All Tasks\",\n  option2: \"Completed Tasks\",\n  option3: \"Uncompleted Tasks\"\n};\nconst menuItems = [{\n  id: \"view\",\n  name: \"View\"\n}, {\n  id: \"trash\",\n  name: \"ðŸ—‘\"\n}];\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState(data);\n  const [checked, setChecked] = useState(tasks.filter(element => element.check === true));\n\n  function DeleteOrView(id, option) {\n    if (id === \"trash\") {\n      if (option === \"All Tasks\") {\n        setTasks([]);\n      } else if (option === \"Completed Tasks\") {\n        setTasks(tasks.filter(element => element.check === true));\n      } else if (option === \"Uncompleted Tasks\") {\n        setTasks(tasks.filter(element => element.check === false));\n      }\n    }\n  }\n\n  function DropdownButton(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      id: \"view-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-buttons\",\n        children: [props.name, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"small-triangle\",\n          children: \" \\u25BC \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: DeleteOrView(props.id, props.options.option1),\n          children: props.options.option1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: DeleteOrView(props.id, props.options.option2),\n          children: props.options.option2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: DeleteOrView(props.id, props.options.option3),\n          children: props.options.option3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  function MakeNewItem() {\n    setTasks([{\n      id: generateUniqueID,\n      name: \"\",\n      checked: false\n    }, ...tasks]);\n  }\n\n  function ButtonsAndTasks(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-and-tasks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          id: \"new-item-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"menu-buttons\",\n            onClick: MakeNewItem,\n            children: \"New Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), props.buttonData.map(e => /*#__PURE__*/_jsxDEV(DropdownButton, {\n          name: e.name,\n          options: dropdownOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 36\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskContainer, {\n        data: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  function TaskContainer(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"task-container\",\n      children: tasks.map(e => /*#__PURE__*/_jsxDEV(TaskItem, {\n        taskData: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 24\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n\n  function TaskItem(props) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"task-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"checkmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.taskData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit\",\n        type: \"button\",\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonsAndTasks, {\n      buttonData: menuItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"OyhJMBoD8Q3l8bnSD++HHsi/bB4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/App.js"],"names":["useState","generateUniqueID","data","id","name","check","dropdownOptions","option1","option2","option3","menuItems","App","tasks","setTasks","checked","setChecked","filter","element","DeleteOrView","option","DropdownButton","props","options","MakeNewItem","ButtonsAndTasks","buttonData","map","e","TaskContainer","TaskItem","taskData"],"mappings":";;;;AACA,OAAO,WAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,gBAAR,QAA+B,8CAA/B;;AAEA,IAAIC,IAAI,GAAG,CACT;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADS,EAMT;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CANS,CAAX;AAaA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,OAAO,EAAE,WADa;AAEtBC,EAAAA,OAAO,EAAE,iBAFa;AAGtBC,EAAAA,OAAO,EAAE;AAHa,CAAxB;AAMA,MAAMC,SAAS,GAAG,CAChB;AACEP,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADgB,EAKhB;AACED,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALgB,CAAlB;;AAWA,SAASO,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACE,IAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACY,KAAK,CAACI,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACZ,KAAR,KAAkB,IAA1C,CAAD,CAAtC;;AAEA,WAASa,YAAT,CAAsBf,EAAtB,EAA0BgB,MAA1B,EAAkC;AAChC,QAAIhB,EAAE,KAAK,OAAX,EAAoB;AAClB,UAAIgB,MAAM,KAAK,WAAf,EAA4B;AAC1BN,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,OAFD,MAEO,IAAIM,MAAM,KAAK,iBAAf,EAAkC;AACvCN,QAAAA,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACZ,KAAR,KAAkB,IAA1C,CAAD,CAAR;AACD,OAFM,MAEA,IAAIc,MAAM,KAAK,mBAAf,EAAoC;AACzCN,QAAAA,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACZ,KAAR,KAAkB,KAA1C,CAAD,CAAR;AACD;AACF;AACF;;AAED,WAASe,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,aAA7B;AAAA,8BACL;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA,mBAAkCA,KAAK,CAACjB,IAAxC,eAA6C;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,eAEL;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAG,UAAA,OAAO,EAAEc,YAAY,CAACG,KAAK,CAAClB,EAAP,EAAWkB,KAAK,CAACC,OAAN,CAAcf,OAAzB,CAAxB;AAAA,oBAA4Dc,KAAK,CAACC,OAAN,CAAcf;AAA1E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,OAAO,EAAEW,YAAY,CAACG,KAAK,CAAClB,EAAP,EAAWkB,KAAK,CAACC,OAAN,CAAcd,OAAzB,CAAxB;AAAA,oBAA4Da,KAAK,CAACC,OAAN,CAAcd;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,OAAO,EAAEU,YAAY,CAACG,KAAK,CAAClB,EAAP,EAAWkB,KAAK,CAACC,OAAN,CAAcb,OAAzB,CAAxB;AAAA,oBAA4DY,KAAK,CAACC,OAAN,CAAcb;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAQD;;AAED,WAASc,WAAT,GAAuB;AACrBV,IAAAA,QAAQ,CAAC,CAAO;AACdV,MAAAA,EAAE,EAAEF,gBADU;AAEdG,MAAAA,IAAI,EAAE,EAFQ;AAGdU,MAAAA,OAAO,EAAE;AAHK,KAAP,EAKP,GAAGF,KALI,CAAD,CAAR;AAMD;;AAED,WAASY,eAAT,CAAyBH,KAAzB,EAAgC;AAC9B,wBAAO;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACL;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,EAAE,EAAC,iBAA7B;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,cAAhC;AAA+C,YAAA,OAAO,EAAEE,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGF,KAAK,CAACI,UAAN,CAAiBC,GAAjB,CAAqBC,CAAC,iBAAI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAEA,CAAC,CAACvB,IAAxB;AAA8B,UAAA,OAAO,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAA1B,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,eAOL,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEM;AAArB;AAAA;AAAA;AAAA;AAAA,cAPK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASD;;AAED,WAASgB,aAAT,CAAuBP,KAAvB,EAA8B;AAC5B,wBAAO;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA,gBACJT,KAAK,CAACc,GAAN,CAAWC,CAAC,iBAAI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAIA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAhB;AADI;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,WAASE,QAAT,CAAkBR,KAAlB,EAAyB;AACvB,wBAAO;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA,8BACL;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADK,eAEL;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFK,eAGL;AAAA,kBAAOA,KAAK,CAACS,QAAN,CAAe1B;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHK,eAIL;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAMD;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,6BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAEM;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD;;GAvEQC,G;;KAAAA,G;AAyET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nlet data = [\n  {\n    id: 1,\n    name: \"test\",\n    check: false\n  },\n  {\n    id: 2,\n    name: \"test2\",\n    check: true\n  }\n]\n\nconst dropdownOptions = {\n  option1: \"All Tasks\",\n  option2: \"Completed Tasks\",\n  option3: \"Uncompleted Tasks\"\n}\n\nconst menuItems = [\n  {\n    id: \"view\",\n    name: \"View\"\n  },\n  {\n    id: \"trash\",\n    name: \"ðŸ—‘\",\n  }\n]\n\nfunction App() {\n  const [tasks, setTasks] = useState(data);\n  const [checked, setChecked] = useState(tasks.filter(element => element.check === true));\n\n  function DeleteOrView(id, option) {\n    if (id === \"trash\") {\n      if (option === \"All Tasks\") {\n        setTasks([])\n      } else if (option === \"Completed Tasks\") {\n        setTasks(tasks.filter(element => element.check === true))\n      } else if (option === \"Uncompleted Tasks\") {\n        setTasks(tasks.filter(element => element.check === false))\n      }\n    }\n  }\n\n  function DropdownButton(props) {\n    return <div className=\"dropdown\" id=\"view-button\">\n      <button className=\"menu-buttons\">{props.name}<span className=\"small-triangle\"> â–¼ </span></button>\n      <div className=\"dropdown-content\">\n        <a onClick={DeleteOrView(props.id, props.options.option1)}>{props.options.option1}</a>\n        <a onClick={DeleteOrView(props.id, props.options.option2)}>{props.options.option2}</a>\n        <a onClick={DeleteOrView(props.id, props.options.option3)}>{props.options.option3}</a>\n      </div>\n    </div>;\n  }\n\n  function MakeNewItem() {\n    setTasks([      {\n      id: generateUniqueID,\n      name: \"\",\n      checked: false\n    },\n      ...tasks])\n  }\n\n  function ButtonsAndTasks(props) {\n    return <div className=\"buttons-and-tasks\">\n      <div className=\"menu-buttons-container\">\n        <div className=\"dropdown\" id=\"new-item-button\">\n          <button type=\"button\" className=\"menu-buttons\" onClick={MakeNewItem}>New Item</button>\n        </div>\n        {props.buttonData.map(e => <DropdownButton name={e.name} options={dropdownOptions}/>)}\n      </div>\n      <TaskContainer data={tasks}/>\n    </div>\n  }\n\n  function TaskContainer(props) {\n    return <div id=\"task-container\">\n      {tasks.map( e => <TaskItem taskData = {e}/>)}\n    </div>;\n  }\n\n  function TaskItem(props) {\n    return <label className=\"task-item\">\n      <input type=\"checkbox\" className=\"check\"/>\n      <span className=\"checkmark\"></span>\n      <span>{props.taskData.name}</span>\n      <button className=\"edit\" type=\"button\">edit</button>\n    </label>;\n  }\n\n\n  return (\n      <div className=\"App\">\n        <div id=\"app-title\"><h2>Tasks</h2>\n        </div>\n        <ButtonsAndTasks buttonData={menuItems}/>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from \"react\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport ButtonsAndTasks from './ButtonsAndTasks';\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data = [{\n  id: 1,\n  name: \"test\",\n  check: false,\n  hidden: false\n}, {\n  id: 2,\n  name: \"test2\",\n  check: false,\n  hidden: false\n}];\nconst dropdownOptions = {\n  option1: \"All Tasks\",\n  option2: \"Completed Tasks\",\n  option3: \"Uncompleted Tasks\"\n};\nconst menuItems = [{\n  id: \"view\",\n  name: \"View\"\n}, {\n  id: \"trash\",\n  name: \"ðŸ—‘\"\n}];\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState(data);\n  const [checked, setChecked] = useState(tasks.filter(element => element.check === true));\n\n  function handleTaskNameChange(e) {\n    this.setTasks({\n      title: e.target.value\n    });\n  }\n\n  function hideTask(task, check) {\n    if (task.check === check) {\n      task.hidden = true;\n    }\n  }\n\n  function toggleCheckbox(id) {\n    tasks.find(e => e.id === id).check = !tasks.find(e => e.id === id).check;\n  }\n\n  function editTask(id, taskName) {\n    let newTasks = tasks.find(e => e.id === id);\n    setTasks();\n  }\n\n  function deleteOrView(id, option) {\n    if (id === \"trash\") {\n      if (option === \"All Tasks\") {\n        setTasks([]);\n      } else if (option === \"Completed Tasks\") {\n        let newTasks = tasks.filter(element => element.check === false);\n        setTasks(newTasks);\n      } else if (option === \"Uncompleted Tasks\") {\n        let newTasks = tasks.filter(element => element.check === true);\n        setTasks(newTasks);\n      }\n    }\n\n    if (id === \"view\") {\n      console.log(\"tasks before\", tasks);\n      console.log(option);\n\n      if (option === \"All Tasks\") {\n        tasks.forEach(e => e.hidden = false);\n        setTasks(tasks);\n      } else if (option === \"Completed Tasks\") {\n        tasks.forEach(e => hideTask(e, false));\n        setTasks(tasks);\n        console.log(\"tasks \", tasks);\n        console.log(\"in completed\");\n      } else if (option === \"Uncompleted Tasks\") {\n        tasks.forEach(e => hideTask(e, true));\n        setTasks(tasks);\n        console.log(\"tasks \", tasks);\n        console.log(\"in uncompleted\");\n      }\n    }\n  }\n\n  function MakeNewItem() {\n    setTasks([{\n      id: generateUniqueID,\n      name: \"\",\n      checked: false,\n      hidden: false\n    }, ...tasks]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonsAndTasks, {\n      toggleCheckbox: toggleCheckbox,\n      deleteOrView: deleteOrView,\n      tasksData: tasks,\n      buttonData: menuItems,\n      dropdownOptions: dropdownOptions,\n      makeNewItem: MakeNewItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"OyhJMBoD8Q3l8bnSD++HHsi/bB4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/App.js"],"names":["useState","generateUniqueID","ButtonsAndTasks","TaskItem","data","id","name","check","hidden","dropdownOptions","option1","option2","option3","menuItems","App","tasks","setTasks","checked","setChecked","filter","element","handleTaskNameChange","e","title","target","value","hideTask","task","toggleCheckbox","find","editTask","taskName","newTasks","deleteOrView","option","console","log","forEach","MakeNewItem"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport ButtonsAndTasks from './ButtonsAndTasks';\nimport TaskItem from \"./TaskItem\";\n\n\n\nlet data = [\n  {\n    id: 1,\n    name: \"test\",\n    check: false,\n    hidden: false\n  },\n  {\n    id: 2,\n    name: \"test2\",\n    check: false,\n    hidden: false\n  }\n]\n\n\nconst dropdownOptions = {\n  option1: \"All Tasks\",\n  option2: \"Completed Tasks\",\n  option3: \"Uncompleted Tasks\"\n}\n\nconst menuItems = [\n  {\n    id: \"view\",\n    name: \"View\"\n  },\n  {\n    id: \"trash\",\n    name: \"ðŸ—‘\",\n  }\n]\n\nfunction App() {\n  const [tasks, setTasks] = useState(data);\n  const [checked, setChecked] = useState(tasks.filter(element => element.check === true));\n\n  function handleTaskNameChange(e) {\n    this.setTasks({\n      title: e.target.value\n    });\n  }\n\n  function hideTask(task, check) {\n    if (task.check === check) {\n      task.hidden = true;\n    }\n  }\n\n  function toggleCheckbox(id) {\n    tasks.find(e => e.id === id).check = !tasks.find(e => e.id === id).check\n  }\n\n  function editTask(id, taskName) {\n    let newTasks = tasks.find(e => e.id === id)\n    setTasks()\n  }\n\n  function deleteOrView(id, option) {\n    if (id === \"trash\") {\n      if (option === \"All Tasks\") {\n        setTasks([])\n      } else if (option === \"Completed Tasks\") {\n        let newTasks = tasks.filter(element => element.check === false)\n        setTasks(newTasks)\n      } else if (option === \"Uncompleted Tasks\") {\n        let newTasks = tasks.filter(element => element.check === true)\n        setTasks(newTasks)\n      }\n    }\n    if (id === \"view\") {\n      console.log(\"tasks before\", tasks)\n      console.log(option)\n      if (option === \"All Tasks\") {\n        tasks.forEach(e => e.hidden = false)\n        setTasks(tasks);\n      } else if (option === \"Completed Tasks\") {\n        tasks.forEach(e => hideTask(e, false))\n        setTasks(tasks);\n        console.log(\"tasks \", tasks)\n        console.log(\"in completed\")\n       } else if (option === \"Uncompleted Tasks\") {\n        tasks.forEach(e => hideTask(e, true))\n        setTasks(tasks);\n        console.log(\"tasks \", tasks)\n        console.log(\"in uncompleted\")\n\n      }\n    }\n  }\n\n  function MakeNewItem() {\n    setTasks([      {\n      id: generateUniqueID,\n      name: \"\",\n      checked: false,\n      hidden: false\n    },\n      ...tasks])\n  }\n\n  return (\n      <div className=\"App\">\n        <div id=\"app-title\"><h2>Tasks</h2>\n        </div>\n        <ButtonsAndTasks toggleCheckbox={toggleCheckbox} deleteOrView={deleteOrView} tasksData={tasks} buttonData={menuItems} dropdownOptions={dropdownOptions} makeNewItem={MakeNewItem}/>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from \"react\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport ButtonsAndTasks from './ButtonsAndTasks';\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data = [{\n  id: 1,\n  name: \"test\",\n  check: false,\n  hidden: false\n}, {\n  id: 2,\n  name: \"test2\",\n  check: true,\n  hidden: false\n}];\nconst dropdownOptions = {\n  option1: \"All Tasks\",\n  option2: \"Completed Tasks\",\n  option3: \"Uncompleted Tasks\"\n};\nconst menuItems = [{\n  id: \"view\",\n  name: \"View\"\n}, {\n  id: \"trash\",\n  name: \"ðŸ—‘\"\n}];\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState(data);\n  const [checked, setChecked] = useState(tasks.filter(element => element.check === true));\n\n  function hideTask(task, check) {\n    if (task.check === check) {\n      task.hidden = true;\n    }\n  }\n\n  function DeleteOrView(id, option) {\n    console.log(\"hi tasks\");\n    console.log(\"my name is \", id);\n\n    if (id === \"trash\") {\n      console.log(\"trash tasks\");\n\n      if (option === \"All Tasks\") {\n        setTasks([]);\n      } else if (option === \"Completed Tasks\") {\n        setTasks(tasks.filter(element => element.check === true));\n      } else if (option === \"Uncompleted Tasks\") {\n        setTasks(tasks.filter(element => element.check === false));\n      }\n    }\n\n    if (id === \"view\") {\n      console.log(\"view tasks\");\n\n      if (option === \"All Tasks\") {} else if (option === \"Completed Tasks\") {\n        tasks.forEach(e => hideTask(e, false));\n      } else if (option === \"Uncompleted Tasks\") {\n        tasks.forEach(e => hideTask(e, true));\n      }\n    }\n  }\n\n  function MakeNewItem() {\n    setTasks([{\n      id: generateUniqueID,\n      name: \"\",\n      checked: false,\n      hidden: false\n    }, ...tasks]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonsAndTasks, {\n      deleteOrView: DeleteOrView,\n      tasksData: tasks,\n      buttonData: menuItems,\n      dropdownOptions: dropdownOptions,\n      makeNewItem: MakeNewItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"OyhJMBoD8Q3l8bnSD++HHsi/bB4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hilarynelson/Desktop/Interaction Design/cs124/lab2/src/App.js"],"names":["useState","generateUniqueID","ButtonsAndTasks","TaskItem","data","id","name","check","hidden","dropdownOptions","option1","option2","option3","menuItems","App","tasks","setTasks","checked","setChecked","filter","element","hideTask","task","DeleteOrView","option","console","log","forEach","e","MakeNewItem"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport ButtonsAndTasks from './ButtonsAndTasks';\nimport TaskItem from \"./TaskItem\";\n\n\n\nlet data = [\n  {\n    id: 1,\n    name: \"test\",\n    check: false,\n    hidden: false\n  },\n  {\n    id: 2,\n    name: \"test2\",\n    check: true,\n    hidden: false\n  }\n]\n\n\nconst dropdownOptions = {\n  option1: \"All Tasks\",\n  option2: \"Completed Tasks\",\n  option3: \"Uncompleted Tasks\"\n}\n\nconst menuItems = [\n  {\n    id: \"view\",\n    name: \"View\"\n  },\n  {\n    id: \"trash\",\n    name: \"ðŸ—‘\",\n  }\n]\n\nfunction App() {\n  const [tasks, setTasks] = useState(data);\n  const [checked, setChecked] = useState(tasks.filter(element => element.check === true));\n\n  function hideTask(task, check) {\n    if (task.check === check) {\n      task.hidden = true;\n    }\n  }\n\n  function DeleteOrView(id, option) {\n    console.log(\"hi tasks\")\n    console.log(\"my name is \", id)\n    if (id === \"trash\") {\n      console.log(\"trash tasks\")\n      if (option === \"All Tasks\") {\n        setTasks([])\n      } else if (option === \"Completed Tasks\") {\n        setTasks(tasks.filter(element => element.check === true))\n      } else if (option === \"Uncompleted Tasks\") {\n        setTasks(tasks.filter(element => element.check === false))\n      }\n    }\n    if (id === \"view\") {\n      console.log(\"view tasks\")\n\n      if (option === \"All Tasks\") {\n      } else if (option === \"Completed Tasks\") {\n         tasks.forEach(e => hideTask(e, false))\n       } else if (option === \"Uncompleted Tasks\") {\n         tasks.forEach(e => hideTask(e, true))\n      }\n    }\n  }\n\n  function MakeNewItem() {\n    setTasks([      {\n      id: generateUniqueID,\n      name: \"\",\n      checked: false,\n      hidden: false\n    },\n      ...tasks])\n  }\n\n  return (\n      <div className=\"App\">\n        <div id=\"app-title\"><h2>Tasks</h2>\n        </div>\n        <ButtonsAndTasks deleteOrView={DeleteOrView} tasksData={tasks} buttonData={menuItems} dropdownOptions={dropdownOptions} makeNewItem={MakeNewItem}/>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["Alert.js","DropdownButton.js","TaskItem.js","TaskContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","className","children","type","onClick","onClose","onOK","DropdownButton","id","name","toggleModal","setCurrentDeleteOption","options","option1","deleteOrView","option2","option3","TaskItem","priority","checked","defaultChecked","toggleCheckbox","TextField","variant","placeholder","value","onChange","e","handleTaskNameChange","disabled","InputProps","disableUnderline","style","fontSize","background","marginTop","paddingBottom","fontFamily","multiline","updatePriority","target","selected","TaskContainer","tasksData","map","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","currentDeleteOption","dropdownOptions","menuItems","App","useState","sort","setSort","showAlert","setShowAlert","currView","setCurrView","query","collection","orderBy","where","useCollection","loading","data","currDelete","handleDeleteTasks","ids","forEach","doc","delete","option","docs","a","b","toUpperCase","created","length","filter","newId","generateUniqueID","set","database","ServerValue","TIMESTAMP","hidden","update","console","log","oldChecked","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfc78d45.chunk.js","sourcesContent":["function Alert(props) {\n    return (\n    <div className=\"alert-buttons\">\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n                <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                        onClick={props.onClose}>\n                    Cancel\n                </button>\n                <button className={\"alert-button alert-ok\"} type={\"button\"}\n                        onClick={() => {\n                            props.onOK();\n                            props.onClose();\n                        }}>\n                    OK\n                </button>\n            </div>\n        </div>\n    </div>);\n}\n\nexport default Alert;","function DropdownButton(props) {\n    return <div className=\"dropdown\" id=\"view-button\">\n        <button className=\"menu-buttons\">{props.name}<span className=\"small-triangle\"> â–¼ </span></button>\n        <div className=\"dropdown-content\">\n            <button className=\"dropdown-item\" onClick={() => {\n                if(props.id === \"trash\") {\n                    props.toggleModal();\n                    props.setCurrentDeleteOption(props.options.option1);\n                } else {\n                    props.deleteOrView(props.id, props.options.option1);\n                }\n            }}>{props.options.option1}</button>\n            <button className=\"dropdown-item\" onClick={() => {\n                if(props.id === \"trash\") {\n                    props.toggleModal();\n                    props.setCurrentDeleteOption(props.options.option2);\n                } else {\n                    props.deleteOrView(props.id, props.options.option2);\n                }\n            }}>{props.options.option2}</button>\n            <button className=\"dropdown-item\" onClick={() => {\n                if(props.id === \"trash\") {\n                    props.toggleModal();\n                    props.setCurrentDeleteOption(props.options.option3);\n                } else {\n                    props.deleteOrView(props.id, props.options.option3);\n                }\n            }}>{props.options.option3}</button>\n        </div>\n    </div>;\n}\n\nexport default DropdownButton;","import TextField from '@mui/material/TextField';\n\nfunction TaskItem(props) {\n    return <label className=\"task-item\" >\n        <div id={\"task-color-\" + props.priority + \"-\" + props.checked}\n        >\n            <input type=\"checkbox\" className=\"check\" defaultChecked={props.checked} onClick={() => props.toggleCheckbox(props.id)}/>\n            <span className=\"checkmark\"></span>\n            {/*<input value={props.name} disabled={props.checked} placeholder=\"Click to Enter Task\" onChange={e => props.handleTaskNameChange(e, props.id)}></input>*/}\n            <TextField\n                id=\"task-text-entry\"\n                variant=\"standard\"\n                placeholder=\"Click to Enter Task\"\n                value={props.name}\n                onChange={e => props.handleTaskNameChange(e, props.id)}\n                disabled={props.checked}\n                InputProps={{ disableUnderline: true,\n                                         style: { fontSize: 40,\n                                                background: \"transparent\",\n                                                marginTop:\"10px\",\n                                                paddingBottom:\"10px\",\n                                                fontFamily: \"Futura\",} }}\n                multiline\n            />\n            <select name=\"Priority\" id=\"priority\" onChange={e => props.updatePriority(props.id, e.target.value)}>\n                <option value=\"a\" selected= {\"a\"===props.priority}>High</option>\n                <option value=\"b\" selected= {\"b\"===props.priority}>Med</option>\n                <option value=\"c\" selected= {\"c\"===props.priority}>Low</option>\n            </select>\n        </div>\n    </label>;\n}\n\nexport default TaskItem;\n","import TaskItem from './TaskItem';\n\nfunction TaskContainer(props) {\n    return <div id=\"task-container\">\n        {props.tasksData.map(e => <TaskItem key={e.id} handleTaskNameChange={props.handleTaskNameChange} {...e} toggleCheckbox={props.toggleCheckbox} updatePriority={props.updatePriority}/>)}\n    </div>;\n}\n\nexport default TaskContainer;","import './App.css';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport Alert from \"./Alert\";\nimport DropdownButton from \"./DropdownButton\";\nimport TaskContainer from \"./TaskContainer\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase/compat\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nlet currentDeleteOption = \"\";\n\nconst dropdownOptions = {\n    option1: \"All Tasks\",\n    option2: \"Completed Tasks\",\n    option3: \"Uncompleted Tasks\"\n}\n\nconst menuItems = [\n    {\n        id: \"view\",\n        name: \"View\"\n    },\n    {\n        id: \"trash\",\n        name: \"ðŸ—‘\",\n    }\n]\n\nfunction App() {\n    const [sort, setSort] = useState(\"Date Created\");\n    const [showAlert, setShowAlert] = useState(false);\n    const [currView, setCurrView] = useState(\"All Tasks\");\n\n    let query = db.collection('hilnels-hmc-tasks');\n    const collection = db.collection('hilnels-hmc-tasks');\n\n    if (currView === \"All Tasks\") {\n        if (sort === \"Name: A to Z\") {\n            query = db.collection('hilnels-hmc-tasks').orderBy(\"name\", \"desc\");\n        } else if (sort === \"Name: Z to A\") {\n            query = db.collection('hilnels-hmc-tasks').orderBy(\"name\", \"asc\");\n        } else if (sort === \"Priority: High to Low\") {\n            query = db.collection('hilnels-hmc-tasks').orderBy(\"priority\", \"desc\");\n        } else if (sort === \"Priority: Low to High\") {\n            query = db.collection('hilnels-hmc-tasks').orderBy(\"priority\", \"asc\");\n        } else {\n            query = db.collection('hilnels-hmc-tasks').orderBy(\"created\", \"asc\");\n        }\n\n        query.orderBy(\"created\", \"asc\");\n    } else if (currView === \"Completed Tasks\") {\n        query = db.collection('hilnels-hmc-tasks').where(\"checked\", \"==\", true);\n    } else {\n        query = db.collection('hilnels-hmc-tasks').where(\"checked\", \"==\", false);\n    }\n\n    const [value, loading, error] = useCollection(query);\n    let data = []\n\n    if (value) {\n        data = value.docs.map(e => {\n            return {...e.data(), id: e.id}\n        });\n    }\n\n    if (sort === \"Name: A to Z\") {\n        data = data.sort((a, b) => (a.name.toUpperCase() > b.name.toUpperCase()) ? 1 : -1)\n    } else if (sort === \"Name: Z to A\") {\n        data = data.sort((a, b) => (a.name.toUpperCase() < b.name.toUpperCase()) ? 1 : -1)\n    } else if (sort === \"Date Created\") {\n        data = data.sort((a, b) => (a.created > b.created) ? 1 : -1)\n    } else if (sort === \"Priority: High to Low\") {\n        data = data.sort((a, b) => (a.priority > b.priority) ? 1 : -1)\n    } else if (sort === \"Priority: Low to High\") {\n        data = data.sort((a, b) => (a.priority < b.priority) ? 1 : -1)\n    }\n\n    function toggleModal() {\n        setShowAlert(!showAlert);\n    }\n\n    function setCurrentDeleteOption(currDelete) {\n        currentDeleteOption = currDelete;\n    }\n\n    function handleTaskNameChange(e, id) {\n        // let taskIndex = tasks.findIndex(e => e.id === id);\n        // tasks[taskIndex].name = e.target.value\n        // console.log(tasks)\n        // setTasks(tasks);\n\n        collection.doc(id).update({name: e.target.value});\n\n    }\n\n    function toggleCheckbox(id) {\n        console.log(\"in toggle checkbox\")\n        const oldChecked = data.find(e => e.id === id).checked;\n        console.log(oldChecked);\n        collection.doc(id).update({checked: !oldChecked})\n    }\n\n    function handleDeleteTasks(ids) {\n        ids.forEach(id => db.collection('hilnels-hmc-tasks').doc(id).delete());\n    }\n\n    function deleteOrView(id, option) {\n        if (id === \"trash\") {\n            if (option === \"All Tasks\") {\n                let ids = data.map(e => e.id);\n                handleDeleteTasks(ids);\n            } else if (option === \"Completed Tasks\") {\n                let ids = data.map(e => {\n                    if (e.checked) return e.id\n                });\n                handleDeleteTasks(ids);\n            } else if (option === \"Uncompleted Tasks\") {\n                let ids = data.map(e => {\n                    if (!e.checked) return e.id\n                });\n                handleDeleteTasks(ids);\n            }\n        }\n        if (id === \"view\") {\n            if (option === \"All Tasks\") {\n                setCurrView(\"All Tasks\")\n            } else if (option === \"Completed Tasks\") {\n                setCurrView(\"Completed Tasks\")\n            } else if (option === \"Uncompleted Tasks\") {\n                setCurrView(\"Uncompleted Tasks\")\n            }\n        }\n    }\n\n    function showTask(task) {\n        return ((currView === \"All Tasks\") || (currView === \"Completed Tasks\" && task.checked) || (currView === \"Uncompleted Tasks\" && !task.checked))\n    }\n\n    function updatePriority(id, priority) {\n        collection.doc(id).update({priority: priority})\n    }\n\n    // a is highest priority\n    function makeNewItem() {\n        const newId = generateUniqueID();\n        collection.doc(newId).set({\n            id: newId,\n            name: \"\",\n            checked: false,\n            priority: \"c\",\n            created: firebase.database.ServerValue.TIMESTAMP\n        })\n    }\n\n    return <div>\n        {\n            loading ? <div>Loading...</div> :\n                <div className=\"App\">\n                    <div className=\"buttons-and-tasks\">\n                        <div id=\"fixed-buttons\">\n                            {showAlert &&\n                            <Alert onClose={toggleModal} onOK={() => deleteOrView(\"trash\", currentDeleteOption)}\n                                   dropdownOptions={dropdownOptions}>\n                                {(currentDeleteOption === \"All Tasks\") ? <div>\n                                        Are you sure you want to delete all {data.length} task(s)?\n                                    </div> :\n                                    (currentDeleteOption === \"Uncompleted Tasks\") ?\n                                        <div>\n                                            Are you sure you want to\n                                            delete {data.filter(e => !e.checked).length} uncompleted task(s)?\n                                        </div> :\n                                        <div>\n                                            Are you sure you want to\n                                            delete {data.filter(e => e.checked).length} completed task(s)?\n                                        </div>}\n                            </Alert>}\n                            <h2 className=\"start\">Tasks</h2>\n                            <div className=\"menu-buttons-container\">\n                            <div className=\"dropdown\" id=\"new-item-button\">\n                                <button type=\"button\" className=\"menu-buttons\" onClick={makeNewItem}>New Item</button>\n                            </div>\n                            {menuItems.map(e => <DropdownButton key={e.id}\n                                                                setCurrentDeleteOption={setCurrentDeleteOption}\n                                                                toggleModal={toggleModal} tasksData={data} {...e}\n                                                                options={dropdownOptions}\n                                                                deleteOrView={deleteOrView}/>)}\n                        </div>\n                        {(currView === \"All Tasks\") && <div id=\"sorting-area\">\n<span>\n\n<div id=\"sort\">\n<div id=\"sort-label\">Sort By:</div>\n<select name=\"sorting\" id=\"task-sorting\" onChange={e => setSort(e.target.value)}>\n<option selected hidden>Sort By:</option>\n<option value=\"Date Created\" selected={\"Date Created\" === sort}>Date Created</option>\n<option value=\"Name: A to Z\" selected={\"Name: A to Z\" === sort}>Name: A to Z</option>\n<option value=\"Name: Z to A\" selected={\"Name: Z to A\" === sort}>Name: Z to A</option>\n<option value=\"Priority: High to Low\" selected={\"Priority: High to Low\" === sort}>Priority: High to Low</option>\n<option value=\"Priority: Low to High\" selected={\"Priority: Low to High\" === sort}>Priority: Low to High</option>\n</select>\n</div>\n</span>\n                        </div>}\n                        </div>\n                        <TaskContainer handleTaskNameChange={handleTaskNameChange} tasksData={data}\n                                       toggleCheckbox={toggleCheckbox} updatePriority={updatePriority}/>\n                    </div>\n                </div>\n        }\n    </div>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}